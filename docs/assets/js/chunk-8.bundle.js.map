{"version":3,"sources":["webpack://pendora/./docs/js/pages/documentation/test_positioning.js"],"names":["window","Rect","setElementClientPosition","TestPositionerPage","referenceElement","document","getElementById","container","overlay","controls","draggable","Draggable","reposition","_p","offsetName","value","getSelectValue","unit","parseFloat","myX","myY","atX","atY","flipX","flipY","myOffsetX","myOffsetY","atOffsetX","atOffsetY","rect","position","my","at","of","inside","collision","addEventListener","event","name","select","querySelector"],"mappings":"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","file":"chunk-8.bundle.js","sourcesContent":["import {Rect} from \"core/vectors\";\nimport {setElementClientPosition} from \"core/ui/position\";\nimport Draggable from \"core/ui/Draggable\";\n\n\nwindow.Rect = Rect;\nwindow.setElementClientPosition = setElementClientPosition;\n\n\nexport default class TestPositionerPage {\n    constructor() {\n\n    }\n\n    load() {\n        this.referenceElement = document.getElementById('referenceElement');\n        this.container = document.getElementById('container');\n        this.overlay = document.getElementById('testOverlay');\n        let controls = document.getElementById('controls');\n\n        this.draggable = new Draggable(this.referenceElement, {\n\n        });\n\n        this.reposition = () => {\n            let _p = (offsetName) => {\n                let value = this.getSelectValue(`${offsetName}-offset`),\n                    unit = this.getSelectValue(`${offsetName}-offset-unit`);\n\n                value = parseFloat(value);\n\n                if(value < 0) {\n                    return `${value}${unit}`;\n                } else if(value > 0) {\n                    return `+${value}${unit}`;\n                } else {\n                    return '';\n                }\n            };\n\n            let myX = this.getSelectValue('my-x'),\n                myY = this.getSelectValue('my-y'),\n                atX = this.getSelectValue('at-x'),\n                atY = this.getSelectValue('at-y'),\n                flipX = this.getSelectValue('flip-x'),\n                flipY = this.getSelectValue('flip-y'),\n                myOffsetX = _p('my-x'),\n                myOffsetY = _p('my-y'),\n                atOffsetX = _p('at-x'),\n                atOffsetY = _p('at-y');\n\n            let rect = new Rect(this.overlay);\n\n            rect = rect.position({\n                my: `${myX}${myOffsetX} ${myY}${myOffsetY}`,\n                at: `${atX}${atOffsetX} ${atY}${atOffsetY}`,\n                of: this.referenceElement,\n                inside: this.container,\n                collision: `${flipX} ${flipY}`\n            });\n\n            setElementClientPosition(this.overlay, rect);\n        };\n\n        this.referenceElement.addEventListener('drag.move', (event) => {\n            this.reposition();\n        });\n\n        controls.addEventListener('change', () => {\n            this.reposition();\n        });\n\n        this.reposition();\n    }\n\n    getSelectValue(name) {\n        let select = document.querySelector(`[name=\"${name}\"]`);\n        return select.value;\n    }\n}\n"],"sourceRoot":""}