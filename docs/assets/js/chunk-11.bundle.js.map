{"version":3,"sources":["webpack://pendora/./docs/js/pages/menus/page_index.js"],"names":["MenuPageIndex","arg","document","body","dataset","pageArg","initSlideMenu","container","testMenu","SelectMenu","isVisible","multiSelect","toggle","clearOldSelection","enableShiftSelect","enableCtrlToggle","i","option","SelectOption","text","value","append","window","appendTo","console","log","menuButton","getElementById","slideMenuNode","slideMenu","SlideMenu","target","addEventListener","event","isActive","show","hide"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;;IAGqBA,a;AACjB,2BAAc;AAAA;AAEb;;;;2BAEM;AACH,UAAIC,GAAG,GAAGC,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,OAAhC;;AAEA,UAAGJ,GAAG,KAAK,WAAX,EAAwB;AACpB,aAAKK,aAAL;AACH;AACJ;;;yCAEoBC,S,EAAW;AAC5B,UAAIC,QAAQ,GAAG,IAAIC,uDAAJ,EAAf;AACAD,cAAQ,CAACE,SAAT,GAAqB,IAArB;AACAF,cAAQ,CAACG,WAAT,GAAuB,IAAvB;AACAH,cAAQ,CAACI,MAAT,GAAkB,MAAlB;AACAJ,cAAQ,CAACK,iBAAT,GAA6B,IAA7B;AACAL,cAAQ,CAACM,iBAAT,GAA6B,IAA7B;AACAN,cAAQ,CAACO,gBAAT,GAA4B,IAA5B;;AAEA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,YAAIC,MAAM,GAAG,IAAIC,yDAAJ,CAAiB;AAACC,cAAI,oBAAaH,CAAC,GAAC,CAAf,CAAL;AAAyBI,eAAK,EAAEJ,CAAC,GAAC;AAAlC,SAAjB,CAAb;AACAR,gBAAQ,CAACa,MAAT,CAAgBJ,MAAhB;AACH;;AAEDK,YAAM,CAACd,QAAP,GAAkBA,QAAlB;AACAA,cAAQ,CAACe,QAAT,CAAkBhB,SAAlB;AACAiB,aAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,aAAO,CAACC,GAAR,CAAYjB,QAAZ;AACH;;;oCAEe;AACZ,UAAIkB,UAAU,GAAGxB,QAAQ,CAACyB,cAAT,CAAwB,aAAxB,CAAjB;AAAA,UACIC,aAAa,GAAG1B,QAAQ,CAACyB,cAAT,CAAwB,iBAAxB,CADpB;AAGA,UAAIE,SAAS,GAAG,IAAIC,sDAAJ,CAAc;AAACC,cAAM,EAAEH;AAAT,OAAd,CAAhB;AAEAF,gBAAU,CAACM,gBAAX,CAA4B,OAA5B,EAAqC,UAAAC,KAAK,EAAI;AAC1C,YAAG,CAACJ,SAAS,CAACK,QAAd,EAAwB;AACpBL,mBAAS,CAACM,IAAV;AACH,SAFD,MAEO;AACHN,mBAAS,CAACO,IAAV;AACH;AACJ,OAND;AAOH","file":"chunk-11.bundle.js","sourcesContent":["import {SelectMenu, SelectOption} from 'menu/Select2';\nimport SlideMenu from \"menu/SlideMenu\";\n\n\nexport default class MenuPageIndex {\n    constructor() {\n\n    }\n\n    load() {\n        let arg = document.body.dataset.pageArg;\n\n        if(arg === 'slidemenu') {\n            this.initSlideMenu();\n        }\n    }\n\n    createSelectMenuTest(container) {\n        let testMenu = new SelectMenu();\n        testMenu.isVisible = true;\n        testMenu.multiSelect = true;\n        testMenu.toggle = \"ctrl\";\n        testMenu.clearOldSelection = true;\n        testMenu.enableShiftSelect = true;\n        testMenu.enableCtrlToggle = true;\n\n        for(let i = 0; i < 10; i++) {\n            let option = new SelectOption({text: `Option #${i+1}`, value: i+1});\n            testMenu.append(option);\n        }\n\n        window.testMenu = testMenu;\n        testMenu.appendTo(container);\n        console.log(\"Debugging SelectMenu as testMenu\");\n        console.log(testMenu);\n    }\n\n    initSlideMenu() {\n        let menuButton = document.getElementById('menu-button'),\n            slideMenuNode = document.getElementById('test-slide-menu');\n\n        let slideMenu = new SlideMenu({target: slideMenuNode});\n\n        menuButton.addEventListener('click', event => {\n            if(!slideMenu.isActive) {\n                slideMenu.show();\n            } else {\n                slideMenu.hide();\n            }\n        });\n    }\n}\n"],"sourceRoot":""}