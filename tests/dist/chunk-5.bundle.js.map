{"version":3,"sources":["webpack://pendora/./src/core/ui/Draggable.js"],"names":["cursor","clientX","clientY","boundingRect","x","left","y","top","clone","opacity","draggable","helper","element","cloneNode","style","_getScrollParent","o","parentElement","scrollWidth","clientWidth","scrollHeight","clientHeight","_translate","target","transform","CONTAINERS","client","height","window","innerHeight","width","innerWidth","right","bottom","viewport","parent","bb","getBoundingClientRect","scrollLeft","scrollTop","_clampPositionToContainer","rect","container","closest","clamp","TOLERANCE_FUNCTIONS","intersect","droppable","item","origin","Draggable","axis","exclude","delay","offset","disabled","distance","handle","revert","scroll","selector","droppables","tolerance","setHelperSize","grid","document","querySelector","_onMouseDown","onMouseDown","bind","Array","isArray","addDroppables","addEventListener","isDragging","_revertFX","concat","push","event","contains","data","privateCache","cache","excluded","preventDefault","doc","startMouseDocumentX","scrollX","startMouseDocumentY","scrollY","mouseDocumentX","mouseDocumentY","startDragging","startDrag","timer","onTimeout","removeEventListener","onMouseUp","clearTimeout","setTimeout","onMouseMove","delta","Math","sqrt","startMouseX","startMouseY","posX","posY","cancel","getDropTargets","startBoundingBox","startBBDocument","clientRectToDocumentSpace","scrollTick","boxSizing","appendChild","startingTranslation","getTranslation","_offset","startingRect","position","_getPosition","dropData","setElementClientPosition","_getDropData","intersectsBefore","intersectsAfter","_dispatchDroppableEvent","bubbles","detail","_triggerEvent","details","mouseX","mouseY","originalEvent","topic","lastTick","performance","now","timestamp","parentBB","helperBB","isOOB","requestAnimationFrame","classList","remove","translation","accepted","accept","Error","isAccepted","startX","removeChild","animation","Animation","applyFrame","frame","frames","animate","duration","onEnd","onComplete","documentRectToClientSpace","dropped","_intersects","dataset","relatedTarget","startingBoundingClientRect","add","r","type","querySelectorAll","indexOf","call","endingRect","dropBox","eventName","properties","CustomEvent","Object","assign","dispatchEvent","publish","dropElement","name","customEvent","snapToGrid","Publisher"],"mappings":"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","file":"chunk-5.bundle.js","sourcesContent":["import Publisher from \"../Publisher\";\r\n\r\nimport {privateCache} from \"core/data\";\r\nimport {\r\n    getTranslation,\r\n    setElementClientPosition,\r\n    documentRectToClientSpace,\r\n    clientRectToDocumentSpace,\r\n    snapToGrid\r\n} from \"core/ui/position\";\r\nimport {clamp} from \"../utility/math\";\r\nimport Animation from \"../fx/Animation\";\r\n\r\n\r\n/**\r\n * Draggable option for offset that offsets the position by the cursor.\r\n *\r\n * @param clientX\r\n * @param clientY\r\n * @param boundingRect\r\n * @returns {{x, y}}\r\n */\r\nexport function cursor({clientX, clientY, boundingRect}) {\r\n    return {\r\n        x: boundingRect.left - clientX,\r\n        y: boundingRect.top - clientY\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Draggable option that clones the draggable element for the helper element.\r\n *\r\n * @param opacity\r\n * @returns {function(*): (ActiveX.IXMLDOMNode | Node)}\r\n */\r\nexport function clone(opacity=null) {\r\n    return function(draggable) {\r\n        let helper = draggable.element.cloneNode(true);\r\n\r\n        if(opacity !== null) {\r\n            helper.style.opacity = opacity;\r\n        }\r\n\r\n        return helper;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Returns the first scrollable parent.\r\n *\r\n * @param element\r\n * @returns {HTMLElement|null}\r\n * @private\r\n */\r\nfunction _getScrollParent(element) {\r\n    let o = element.parentElement;\r\n\r\n    while(o) {\r\n        if (o.scrollWidth > o.clientWidth || o.scrollHeight > o.clientHeight) {\r\n            return o;\r\n        }\r\n\r\n        o = o.parentElement;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\n/**\r\n * Sets the target elements x and y position by setting the translate3d translation matrix.\r\n *\r\n * @param target\r\n * @param x\r\n * @param y\r\n * @private\r\n */\r\nfunction _translate(target, x, y) {\r\n    target.style.transform = `translate3d(${x}px, ${y}px, 0)`;\r\n}\r\n\r\n\r\n// Group of function that can be passed to Draggables container property that will contain a dragged element to within\r\n// the given parameters.  Function should return a rect with {left, top, width, and height} properties relative to the\r\n// client.  Similiar to Element.getBoundingClientRect().\r\nexport const CONTAINERS = {\r\n    /**\r\n     * Constrains to client area.\r\n     * @returns {{top: number, left: number, width: number, height: number}}\r\n     */\r\n    client: function() {\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            height: window.innerHeight,\r\n            width: window.innerWidth,\r\n            right: window.innerWidth,\r\n            bottom: window.innerHeight\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Constrains to viewport.\r\n     * @param element\r\n     * @returns {{top: number, left: number, width: number, height: number}}\r\n     */\r\n    viewport: function(element) {\r\n        let parent = _getScrollParent(element),\r\n            bb = parent.getBoundingClientRect();\r\n\r\n        return {\r\n            left: bb.left - parent.scrollLeft,\r\n            top: bb.top - parent.scrollTop,\r\n            width: parent.scrollWidth,\r\n            height: parent.scrollHeight\r\n        };\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Takes a bounding client rect and constrains the left and top position to within the container.  Returns a new rect.\r\n *\r\n * @param rect\r\n * @param container\r\n * @param element\r\n * @param helper\r\n * @returns {{top: *, left: *}}\r\n * @private\r\n */\r\nfunction _clampPositionToContainer(rect, container, element, helper) {\r\n    let bb = helper.getBoundingClientRect();\r\n\r\n    let x = rect.left,\r\n        y = rect.top;\r\n\r\n    if(container) {\r\n        if(typeof container === 'function') {\r\n            container = container(element, helper);\r\n        } else if(container.getBoundingClientRect) {\r\n            container = container.getBoundingClientRect();\r\n        } else {\r\n            container = element.closest(container);\r\n            container = container.getBoundingClientRect();\r\n        }\r\n\r\n        if(container) {\r\n            x = clamp(x, container.left, container.left + container.width - bb.width);\r\n            y = clamp(y, container.top, container.top + container.height - bb.height);\r\n        }\r\n    }\r\n\r\n    return {\r\n        ...rect,\r\n        left: x,\r\n        top: y\r\n    };\r\n}\r\n\r\n\r\n// Group of function that can be passed to the tolerance property of Draggable to control when an item is considered\r\n// intersecting another for drop events.\r\nconst TOLERANCE_FUNCTIONS = {\r\n    intersect: function(droppable, item) {\r\n        let origin = {\r\n            x: item.left + (item.width / 2),\r\n            y: item.top + (item.height / 2)\r\n        };\r\n\r\n        return origin.x >= droppable.left\r\n            && origin.x <= droppable.right\r\n            && origin.y >= droppable.top\r\n            && origin.y <= droppable.bottom;\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Behavior class to add the draggable behavior to an element for group of elements.\r\n */\r\nexport default class Draggable extends Publisher {\r\n    static CLONE = clone;\r\n    // noinspection JSUnusedGlobalSymbols\r\n    static OFFSET_CURSOR = cursor;\r\n\r\n    /**\r\n     * @param element {Element|String} The element to attach the draggable behavior to.\r\n     * @param container {string|CONTAINERS.client|CONTAINERS.viewport|function}\r\n     *  Constrains the draggable into the given area.\r\n     *  `container` can either be a css selector to match a parent element, a Function(element, helper)\r\n     *  that should return a bounding box.  Or an element who's bounding box will be used.\r\n     * @param axis {'x'|'y'|'xy'}\r\n     *  Controls what axis the item is draggable.  x can be dragged horizontally, y vertically, and xy can be freely dragged.\r\n     * @param exclude {String}\r\n     *  Prevents dragging from starting on matching elements.\r\n     * @param delay {Number}\r\n     *  The time in milliseconds after the mouse down event occurs that dragging will begin.\r\n     * @param offset {{x, y}|[x, y]|Function}\r\n     *  By default when an item is dragged is position will be set relative to the drop left corner of the item.\r\n     *  Offset is used to offset the element from the cursor.  You can pass an {x, y} object, an array with [x, y] pair,\r\n     *  or a Function({target, draggable, clientX, clientY, boundingRect}) that will be called that return an {x, y} object.\r\n     * @param disabled {Boolean}\r\n     *  Disables dragging.\r\n     * @param distance {Number}\r\n     *  Adds resistance to drag starting.  The users must move at least `distance` amount of pixels away from the\r\n     *  starting position for drag to start.\r\n     * @param handle {String}\r\n     *  If dragging will only start if the user clicks an element that matches the css selectors.\r\n     * @param helper {Function|Element}\r\n     *  An element to use as a helper for dragging.  Can be a Element or a Function that returns an element.\r\n     * @param revert {Number|Boolean}\r\n     *  Controls if the draggable reverts back to the starting position if no droppable accepts the target.\r\n     * @param scroll {Number}\r\n     *  Controls the speed that the draggable will scroll the scrollParent when the draggable leaves the viewable area.\r\n     * @param selector {String}\r\n     *  Used to delegate dragging to sub items.\r\n     * @param droppables\r\n     *  An array of css selectors or elements that will be used as drop targets for the draggable.\r\n     * @param tolerance {String}\r\n     *  Controls the function that determines if an item intersects a drop target.\r\n     * @param setHelperSize {Boolean}\r\n     *  If true the helpers width and height will be set by javascript to match the original element.\r\n     * @param grid {{x, y} | [x, y] | Number}\r\n     *  Snaps draggable movement to a grid with the given x, y dimensions.\r\n     */\r\n    constructor(element, {container=null, axis='xy', exclude=\"input, button, select, .js-no-drag, textarea\", delay=null, offset=cursor, disabled=false,\r\n        distance=null, handle=null, helper=null, revert=null, scroll=null, selector=null, droppables=null, tolerance='intersect',\r\n        setHelperSize=false, grid=null}={}) {\r\n        super();\r\n\r\n        if(typeof element === 'string') {\r\n            this.element = document.querySelector(element);\r\n        } else {\r\n            this.element = element;\r\n        }\r\n\r\n        this._onMouseDown = this.onMouseDown.bind(this);\r\n        this.disabled = disabled;\r\n        this.helper = helper;\r\n        this.offset = offset;\r\n        this.axis = axis;\r\n        this.delay = delay;\r\n        this.distance = distance;\r\n        this.container = container;\r\n        this.handle = handle;\r\n        this.exclude = exclude;\r\n        this.revert = revert;\r\n        this.selector = selector;\r\n        this.droppables = [];\r\n        this.tolerance = tolerance;\r\n        this.setHelperSize = setHelperSize;\r\n        this.scroll = scroll;\r\n\r\n        if(typeof grid === 'number') {\r\n            this.grid = {\r\n                x: grid,\r\n                y: grid\r\n            };\r\n        } else if(Array.isArray(grid)) {\r\n            this.grid = {\r\n                x: grid[0],\r\n                y: grid[1]\r\n            };\r\n        } else {\r\n            this.grid = grid;\r\n        }\r\n\r\n        if(droppables) {\r\n            this.addDroppables(droppables);\r\n        }\r\n\r\n        this.element.addEventListener('mousedown', this._onMouseDown);\r\n        this.isDragging = false;\r\n\r\n        this._revertFX = null;\r\n    }\r\n\r\n    /**\r\n     * Adds a drop target item.  A `droppable` can be an element, a css selector or an array of those.\r\n     * @param droppables\r\n     */\r\n    addDroppables(droppables) {\r\n        if(Array.isArray(droppables)) {\r\n            this.droppables = this.droppables.concat(droppables);\r\n        } else {\r\n            this.droppables.push(droppables);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Responsible for detecting dragging and starting the drag depending on delay and distance.\r\n     * @param event\r\n     */\r\n    onMouseDown(event) {\r\n        let element = this.element;\r\n\r\n        if(this.selector) {\r\n            element = event.target.closest(this.selector);\r\n\r\n            if(!this.element.contains(element)) {\r\n                element = null;\r\n            }\r\n        }\r\n\r\n        if(!element) return;\r\n\r\n        let data = privateCache.cache(element);\r\n\r\n        if(data.isDragging || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if(this.handle) {\r\n            let handle = event.target.closest(this.handle);\r\n\r\n            if(!handle || !element.contains(handle)) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if(this.exclude) {\r\n            let excluded = event.target.closest(this.exclude);\r\n\r\n            if(excluded && element.contains(excluded)) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n        let distance = this.distance || 0,\r\n            delay = typeof this.delay === 'number' ? this.delay : -1,\r\n            doc = document,\r\n            startMouseDocumentX = event.clientX + window.scrollX,\r\n            startMouseDocumentY = event.clientY + window.scrollY,\r\n            mouseDocumentX = startMouseDocumentX,\r\n            mouseDocumentY = startMouseDocumentY;\r\n\r\n        // Tests to see that delay and distance was met before dragging.\r\n        let startDragging = () => {\r\n            if(distance === 0 && delay < 0) {\r\n                this.startDrag(element, startMouseDocumentX, startMouseDocumentY, mouseDocumentX, mouseDocumentY);\r\n            }\r\n        };\r\n\r\n        // Delay dragging.\r\n        if(delay >= 0) {\r\n            let timer;\r\n\r\n            let onTimeout = () => {\r\n                delay = -1;\r\n                doc.removeEventListener('mouseup', onMouseUp);\r\n                startDragging();\r\n            };\r\n\r\n            let onMouseUp = () => {\r\n                doc.removeEventListener('mouseup', onMouseUp);\r\n                clearTimeout(timer);\r\n            };\r\n\r\n            doc.addEventListener('mouseup', onMouseUp);\r\n            timer = setTimeout(onTimeout, delay);\r\n        }\r\n\r\n        // Delay by distance.\r\n        if(distance > 0) {\r\n            let onMouseUp = () => {\r\n                doc.removeEventListener('mouseup', onMouseUp);\r\n                doc.removeEventListener('mousemove', onMouseMove);\r\n            };\r\n\r\n            let onMouseMove = (event) => {\r\n                mouseDocumentX = event.clientX + window.scrollX;\r\n                mouseDocumentY = event.clientY + window.scrollY;\r\n\r\n                let delta = Math.sqrt(\r\n                    (mouseDocumentX - startMouseDocumentX)**2 + (mouseDocumentY - startMouseDocumentY)**2\r\n                );\r\n\r\n                if(delta > distance) {\r\n                    distance = 0;\r\n                    doc.removeEventListener('mouseup', onMouseUp);\r\n                    doc.removeEventListener('mousemove', onMouseMove);\r\n                    startDragging();\r\n                }\r\n            };\r\n\r\n            doc.addEventListener('mouseup', onMouseUp);\r\n            doc.addEventListener('mousemove', onMouseMove);\r\n        }\r\n\r\n        startDragging();\r\n    }\r\n\r\n    /**\r\n     * Starts the drag animation at the given x, y origin.\r\n     *\r\n     * @param element\r\n     * @param startMouseX\r\n     * @param startMouseY\r\n     * @param posX\r\n     * @param posY\r\n     */\r\n    startDrag(element, startMouseX, startMouseY, posX, posY) {\r\n        if(this.isDragging) {\r\n            return;\r\n        }\r\n\r\n        this.isDragging = true;\r\n\r\n        // Cancel any animation that are running.\r\n        if(this._revertFX) {\r\n            this._revertFX.cancel();\r\n            this._revertFX = null;\r\n        }\r\n\r\n        let doc = document,\r\n            target,\r\n            droppables = this.getDropTargets(),\r\n            startBoundingBox = element.getBoundingClientRect(),\r\n            startBBDocument = clientRectToDocumentSpace(startBoundingBox),\r\n            helper,\r\n            scrollTick;\r\n\r\n        if(!this.helper || this.helper === 'self') {\r\n            target = element;\r\n        } else if(typeof this.helper === 'function') {\r\n            target = this.helper(this);\r\n            helper = target;\r\n        } else if(this.helper) {\r\n            target = this.helper;\r\n            helper = target;\r\n        }\r\n\r\n        if(helper) {\r\n            if(this.setHelperSize) {\r\n                if(this.setHelperSize === true) {\r\n                    helper.style.width = `${startBoundingBox.width}px`;\r\n                    helper.style.height = `${startBoundingBox.height}px`;\r\n                    helper.style.boxSizing = 'border-box';\r\n                } else if(Array.isArray(this.setHelperSize)) {\r\n                    helper.style.width = `${this.setHelperSize[0]}px`;\r\n                    helper.style.height = `${this.setHelperSize[1]}px`;\r\n                } else {\r\n                    helper.style.width = `${this.setHelperSize.width}px`;\r\n                    helper.style.height = `${this.setHelperSize.height}px`;\r\n                }\r\n            }\r\n        }\r\n\r\n        // If the target doesn't have a parentElement it needs to be added to the page.\r\n        if(!target.parentElement) {\r\n            element.parentElement.appendChild(target);\r\n        }\r\n\r\n        // mouseOffsetX and mouseOffsetY is the mouses offset relative to the top left corner of the element\r\n        // being dragged.\r\n\r\n        // offsetX and offsetY is how much the dragged element is offset from the cursor.\r\n        // By default it is at the top left of the element.\r\n        let startingTranslation = getTranslation(target),\r\n            offset = {x: 0, y: 0};\r\n\r\n        // The offset property controls how much the dragged element is offset from top left corner of the element.\r\n        // By default it is [0, 0] but a function can be or array can be passed to control this behavior.\r\n        if(this.offset) {\r\n            let _offset = this.offset;\r\n\r\n            if(typeof _offset === 'function') {\r\n                offset = this.offset({\r\n                    target: target,\r\n                    draggable: this,\r\n                    clientX: startMouseX - window.scrollX,\r\n                    clientY: startMouseY - window.scrollY,\r\n                    boundingRect: startBoundingBox\r\n                });\r\n            }\r\n        }\r\n\r\n        // Offset should be {x, y} not an array.\r\n        if(Array.isArray(offset)) {\r\n            offset = {\r\n                x: offset[0],\r\n                y: offset[1]\r\n            };\r\n        }\r\n\r\n        let onMouseMove = (event) => {\r\n            event.preventDefault();\r\n\r\n            let startingRect = target.getBoundingClientRect(),\r\n                position = this._getPosition(element, target, event.clientX, event.clientY, offset, this.container),\r\n                dropData;\r\n\r\n            setElementClientPosition(target, position, 'translate3d');\r\n            dropData = this._getDropData(droppables, startingRect, position);\r\n\r\n            for(let droppable of dropData) {\r\n                if(!droppable.intersectsBefore && droppable.intersectsAfter) {\r\n                    this._dispatchDroppableEvent(droppable.target, 'drag-enter', {\r\n                        bubbles: true,\r\n\r\n                        detail: {\r\n                            item: target\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            this._triggerEvent(element, 'drag-move', {\r\n                bubbles: false,\r\n                details: {\r\n                    mouseX: event.clientX + window.scrollX,\r\n                    mouseY: event.clientY + window.scrollY,\r\n                    clientX: event.clientX,\r\n                    clientY: event.clientY,\r\n                    startMouseX,\r\n                    startMouseY,\r\n                    offset,\r\n                    helper: target,\r\n                    originalEvent: event\r\n                },\r\n                topic: 'draggable.move'\r\n            });\r\n\r\n            // Refresh dropData incase something moved.\r\n            dropData = this._getDropData(droppables, startingRect, position);\r\n\r\n            for(let droppable of dropData) {\r\n                if(droppable.intersectsBefore && !droppable.intersectsAfter) {\r\n                    this._dispatchDroppableEvent(droppable.target, 'drag-leave', {\r\n                        bubbles: true,\r\n                        detail: {\r\n                            item: target\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            if(this.scroll && !scrollTick) {\r\n                let parent = _getScrollParent(element);\r\n\r\n                if(parent) {\r\n                    let lastTick = performance.now(),\r\n                        scrollX = parent.scrollLeft,\r\n                        scrollY = parent.scrollTop;\r\n\r\n                    scrollTick = timestamp => {\r\n                        let parentBB = parent.getBoundingClientRect(),\r\n                            helperBB = target.getBoundingClientRect(),\r\n                            x, y,\r\n                            delta = timestamp - lastTick,\r\n                            isOOB = false;\r\n\r\n                        lastTick = timestamp;\r\n\r\n                        if (helperBB.right > parentBB.right) {\r\n                            x = (helperBB.right - parentBB.right) / helperBB.width;\r\n                            isOOB = true;\r\n                            scrollX += delta * x * this.scroll;\r\n                            parent.scrollLeft = scrollX;\r\n                        } else if (helperBB.left < parentBB.left) {\r\n                            x = (parentBB.left - helperBB.left) / helperBB.width;\r\n                            isOOB = true;\r\n                            scrollX -= delta * x * this.scroll;\r\n                            parent.scrollLeft = scrollX;\r\n                        }\r\n\r\n                        if (helperBB.bottom > parentBB.bottom) {\r\n                            y = (helperBB.bottom - parentBB.bottom) / helperBB.height;\r\n                            isOOB = true;\r\n                            scrollY += delta * y * this.scroll;\r\n                            parent.scrollTop = scrollY;\r\n                        } else if (helperBB.top < parentBB.top) {\r\n                            y = (parentBB.top - helperBB.top) / helperBB.height;\r\n                            isOOB = true;\r\n                            scrollY -= delta * y * this.scroll;\r\n                            parent.scrollTop = scrollY;\r\n                        }\r\n\r\n                        helperBB = _clampPositionToContainer(helperBB, this.container, element, target);\r\n                        setElementClientPosition(target, helperBB, 'translate3d');\r\n\r\n                        if (isOOB && this.isDragging) {\r\n                            window.requestAnimationFrame(scrollTick);\r\n                        } else {\r\n                            scrollTick = null;\r\n                        }\r\n                    };\r\n\r\n                    window.requestAnimationFrame(scrollTick);\r\n                }\r\n            }\r\n        };\r\n\r\n        let onMouseUp = (event) => {\r\n            event.preventDefault();\r\n            doc.removeEventListener('mousemove', onMouseMove);\r\n            doc.removeEventListener('mouseup', onMouseUp);\r\n            doc = null;\r\n            this.isDragging = false;\r\n            element.classList.remove('ui-dragging');\r\n\r\n            let startingRect = target.getBoundingClientRect(),\r\n                position = this._getPosition(element, target, event.clientX, event.clientY, offset, this.container),\r\n                translation = getTranslation(target),\r\n                accepted = null;\r\n\r\n            function accept(element) {\r\n                if(!accepted) {\r\n                    accepted = element;\r\n                } else {\r\n                    throw new Error(\"Draggable has already been accepted.\");\r\n                }\r\n            }\r\n\r\n            function isAccepted() {\r\n                return !!accepted;\r\n            }\r\n\r\n            this._triggerEvent(element, 'drag-end', {\r\n                bubbles: true,\r\n\r\n                details: {\r\n                    startX: startMouseX - window.scrollX,\r\n                    startMouseY,\r\n                    offset,\r\n                    clientX: event.clientX,\r\n                    clientY: event.clientY,\r\n\r\n                    originalEvent: event,\r\n                    helper: target,\r\n\r\n                    accept,\r\n                    isAccepted\r\n                },\r\n\r\n                topic: 'draggable.end',\r\n\r\n                accept,\r\n                isAccepted\r\n            });\r\n\r\n            if(!accepted && this.revert === true) {\r\n                _translate(target, startingTranslation.x, startingTranslation.y);\r\n\r\n                if(target !== element && target.parentElement) {\r\n                    target.parentElement.removeChild(target);\r\n                }\r\n\r\n                this._triggerEvent(element, 'drag-complete', {bubbles: true, topic: 'draggable.complete'});\r\n            } else if(!accepted && typeof this.revert === 'number') {\r\n                let animation = new Animation({\r\n                    applyFrame(element, frame) {\r\n                        _translate(element, frame.left, frame.top);\r\n                    },\r\n\r\n                    frames: {\r\n                        '0%': {\r\n                            left: translation.x + (position.left - startingRect.left),\r\n                            top: translation.y + (position.top - startingRect.top)\r\n                        },\r\n\r\n                        '100%': {\r\n                            left: startingTranslation.x,\r\n                            top: startingTranslation.y\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this._revertFX = animation.animate(target, {\r\n                    duration: this.revert,\r\n\r\n                    onEnd() {\r\n                        if(target !== element && target.parentElement) {\r\n                            target.parentElement.removeChild(target);\r\n                        }\r\n                    },\r\n\r\n                    onComplete: () => {\r\n                        this._triggerEvent(element, 'drag-complete', {bubbles: true, topic: 'draggable.complete'});\r\n                    }\r\n                });\r\n            } else {\r\n                if(target !== element && target.parentElement) {\r\n                    target.parentElement.removeChild(target);\r\n                }\r\n\r\n                setElementClientPosition(element, position, 'translate3d');\r\n\r\n                let startingRect = documentRectToClientSpace(startBBDocument),\r\n                    dropped = [];\r\n\r\n                for(let droppable of droppables) {\r\n                    if(this._intersects(element.dataset.tolerance, droppable.getBoundingClientRect(), position)) {\r\n                        this._dispatchDroppableEvent(droppable, 'drop', {\r\n                            bubbles: true,\r\n                            clientX: event.clientX,\r\n                            clientY: event.clientY,\r\n                            relatedTarget: element,\r\n                            detail: {\r\n                                originalEvent: event,\r\n                                startingBoundingClientRect: startingRect,\r\n                                droppable: droppable\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                this._triggerEvent(element, 'drag-complete', {\r\n                    topic: 'draggable.complete',\r\n                    details: {\r\n                        dropped\r\n                    },\r\n                    bubbles: true,\r\n                    dropped\r\n                });\r\n            }\r\n        };\r\n\r\n        doc.addEventListener('mousemove', onMouseMove);\r\n        doc.addEventListener('mouseup', onMouseUp);\r\n        element.classList.add('ui-dragging');\r\n\r\n        this._triggerEvent(element, 'drag-start', {\r\n            bubbles: true,\r\n            details: {\r\n                startMouseY,\r\n                startMouseX,\r\n                offset,\r\n                mouseX: posX,\r\n                mouseY: posY,\r\n                clientX: posX - window.scrollX,\r\n                clientY: posY - window.scrollY,\r\n                helper: target\r\n            },\r\n            topic: 'draggable.start'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets an array of elements of all the drop targets.\r\n     * If the drop target is a string, it queries for those elements.\r\n     *\r\n     * @returns {Array}\r\n     */\r\n    getDropTargets() {\r\n        let r = [];\r\n\r\n        for(let droppable of this.droppables) {\r\n            let type = typeof droppable;\r\n\r\n            if(type === 'string') {\r\n                for(let target of document.querySelectorAll(droppable)) {\r\n                    if(r.indexOf(target) !== -1) continue;\r\n                    r.push(target);\r\n                }\r\n            } else if(type === 'function') {\r\n                droppable = droppable.call(this, this);\r\n                if(r.indexOf(droppable) !== -1) continue;\r\n                r.push(droppable);\r\n            } else {\r\n                if(r.indexOf(droppable) !== -1) continue;\r\n                r.push(droppable);\r\n            }\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    /**\r\n     * Takes an array of drop targets and tests to see if the target intersects the start and ending rectangles.\r\n     *\r\n     * Rects are objects that have the left, right, top, bottom, width and height properties defined.\r\n     * Similar to the results received from Element.getBoundingClientRect().\r\n     *\r\n     * @param droppables - Array of elements to tests.\r\n     * @param startingRect - Starting rect.\r\n     * @param endingRect - Ending rect.\r\n     * @returns {Array}\r\n     * @private\r\n     */\r\n    _getDropData(droppables, startingRect, endingRect) {\r\n        let dropData = [];\r\n\r\n        for(let droppable of droppables) {\r\n            // Convert to client space.\r\n            let dropBox = droppable.getBoundingClientRect();\r\n\r\n            let intersectsBefore = this._intersects(droppable.dataset.tolerance, dropBox, startingRect),\r\n                intersectsAfter = this._intersects(droppable.dataset.tolerance, dropBox, endingRect);\r\n\r\n            dropData.push({\r\n                intersectsBefore,\r\n                intersectsAfter,\r\n                target: droppable,\r\n                ...dropBox\r\n            });\r\n        }\r\n\r\n        return dropData;\r\n    }\r\n\r\n    /**\r\n     * Triggers an event on the current item.\r\n     *\r\n     * @param item\r\n     * @param eventName\r\n     * @param details\r\n     * @param bubbles\r\n     * @param topic\r\n     * @param properties\r\n     * @private\r\n     */\r\n    _triggerEvent(item, eventName, {bubbles, details, topic, ...properties}) {\r\n        details = {\r\n            draggable: this,\r\n            item: item,\r\n\r\n            ...details\r\n        };\r\n\r\n        let event = new CustomEvent(eventName, {\r\n            bubbles: bubbles,\r\n            detail: details\r\n        });\r\n\r\n        if(properties) {\r\n            Object.assign(event, properties);\r\n        }\r\n\r\n        item.dispatchEvent(event);\r\n\r\n        if(topic !== false) {\r\n            topic = topic || eventName;\r\n\r\n            this.publish(topic, {\r\n                draggable: this,\r\n                item: this,\r\n\r\n                ...details\r\n            });\r\n        }\r\n    }\r\n\r\n    _dispatchDroppableEvent(dropElement, name, {bubbles=true, detail={}, ...properties}={}) {\r\n        let customEvent = new CustomEvent(name, {\r\n            bubbles,\r\n            detail: {\r\n                dropElement: dropElement,\r\n                draggable: this,\r\n                ...detail\r\n            }\r\n        });\r\n\r\n        // if(topic !== false && droppable.publish) {\r\n        //     topic = topic || name;\r\n        //\r\n        //     droppable.publish(topic, {\r\n        //         target: droppable,\r\n        //         draggable: this,\r\n        //         name: topic,\r\n        //         ...detail\r\n        //     });\r\n        // }\r\n\r\n        Object.assign(customEvent, properties);\r\n\r\n        dropElement.dispatchEvent(customEvent);\r\n    }\r\n\r\n    /**\r\n     * Tests to see if the item intersects the droppable with the given tolerance function.\r\n     *\r\n     * @param tolerance\r\n     * @param droppable\r\n     * @param item\r\n     * @returns {*}\r\n     * @private\r\n     */\r\n    _intersects(tolerance, droppable, item) {\r\n        tolerance = tolerance || this.tolerance;\r\n        return TOLERANCE_FUNCTIONS[tolerance](droppable, item);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the expected bound box of the helper element at the given mouse coordinates.\r\n     *\r\n     * @param element\r\n     * @param helper\r\n     * @param clientX\r\n     * @param clientY\r\n     * @param offset\r\n     * @param container\r\n     * @returns {{top: *, left: *, bottom: *, width: number, right: *, height: number, target: *}}\r\n     */\r\n    _getPosition(element, helper, clientX, clientY, offset, container) {\r\n        let bb = helper.getBoundingClientRect();\r\n\r\n        let left = clientX + offset.x,\r\n            top = clientY + offset.y;\r\n\r\n        if(this.grid) {\r\n            left = snapToGrid(left, this.grid.x);\r\n            top = snapToGrid(top, this.grid.y);\r\n        }\r\n\r\n        let r = {\r\n            left: left,\r\n            top: top,\r\n            width: bb.width,\r\n            height: bb.height,\r\n            right: left + bb.width,\r\n            bottom: top + bb.height,\r\n            target: helper\r\n        };\r\n\r\n        return {...r, ..._clampPositionToContainer(r, container, element, helper)};\r\n    }\r\n}\r\n"],"sourceRoot":""}