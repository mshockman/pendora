{"version":3,"sources":["webpack://pendora/./tests/src/test_positioner.js"],"names":["window","Rect","setElementClientPosition","TestPositionerPage","referenceElement","document","getElementById","container","overlay","controls","draggable","Draggable","reposition","_p","offsetName","value","getSelectValue","unit","parseFloat","myX","myY","atX","atY","flipX","flipY","myOffsetX","myOffsetY","atOffsetX","atOffsetY","rect","position","my","at","of","inside","collision","addEventListener","event","name","select","querySelector"],"mappings":"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","file":"chunk-16.bundle.js","sourcesContent":["import {Rect} from \"../../src/core/vectors\";\r\nimport {setElementClientPosition} from \"../../src/core/ui/position\";\r\nimport Draggable from \"../../src/core/ui/Draggable\";\r\n\r\n\r\nwindow.Rect = Rect;\r\nwindow.setElementClientPosition = setElementClientPosition;\r\n\r\n\r\nexport default class TestPositionerPage {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    load() {\r\n        this.referenceElement = document.getElementById('referenceElement');\r\n        this.container = document.getElementById('container');\r\n        this.overlay = document.getElementById('testOverlay');\r\n        let controls = document.getElementById('controls');\r\n\r\n        this.draggable = new Draggable(this.referenceElement, {\r\n\r\n        });\r\n\r\n        this.reposition = () => {\r\n            let _p = (offsetName) => {\r\n                let value = this.getSelectValue(`${offsetName}-offset`),\r\n                    unit = this.getSelectValue(`${offsetName}-offset-unit`);\r\n\r\n                value = parseFloat(value);\r\n\r\n                if(value < 0) {\r\n                    return `${value}${unit}`;\r\n                } else if(value > 0) {\r\n                    return `+${value}${unit}`;\r\n                } else {\r\n                    return '';\r\n                }\r\n            };\r\n\r\n            let myX = this.getSelectValue('my-x'),\r\n                myY = this.getSelectValue('my-y'),\r\n                atX = this.getSelectValue('at-x'),\r\n                atY = this.getSelectValue('at-y'),\r\n                flipX = this.getSelectValue('flip-x'),\r\n                flipY = this.getSelectValue('flip-y'),\r\n                myOffsetX = _p('my-x'),\r\n                myOffsetY = _p('my-y'),\r\n                atOffsetX = _p('at-x'),\r\n                atOffsetY = _p('at-y');\r\n\r\n            let rect = new Rect(this.overlay);\r\n\r\n            rect = rect.position({\r\n                my: `${myX}${myOffsetX} ${myY}${myOffsetY}`,\r\n                at: `${atX}${atOffsetX} ${atY}${atOffsetY}`,\r\n                of: this.referenceElement,\r\n                inside: this.container,\r\n                collision: `${flipX} ${flipY}`\r\n            });\r\n\r\n            setElementClientPosition(this.overlay, rect);\r\n        };\r\n\r\n        this.referenceElement.addEventListener('drag-move', (event) => {\r\n            this.reposition();\r\n        });\r\n\r\n        controls.addEventListener('change', () => {\r\n            this.reposition();\r\n        });\r\n\r\n        this.reposition();\r\n    }\r\n\r\n    getSelectValue(name) {\r\n        let select = document.querySelector(`[name=\"${name}\"]`);\r\n        return select.value;\r\n    }\r\n}\r\n"],"sourceRoot":""}